/*
 Copyright 2015 Matt Skellon
 1st Year SDAGE PPP Assignment 2
*/

/// \file Object.h
/// \brief Defines basic variables for created objects.
/// \author Matthew Skellon
/// \version 1.0
/// \date 4/5/15 Initial Doxygen file creation, updated to NCCA Coding Standard

#ifndef OBJECT_H_
#define OBJECT_H_

#include <string>
#include "Scene.h"


class Object
{
public :
  //------------------------------------------------------------------------------------------------------------
  /// @brief Storage for some GL functions
  //------------------------------------------------------------------------------------------------------------
  GLuint  m_DisplayList;

protected :
  Object()
  {
    loadObject();
  }

  ~Object(){}

  void loadObject();

  //------------------------------------------------------------------------------------------------------------
  /// @brief Stores the vertex coordinates for loading
  //------------------------------------------------------------------------------------------------------------
  std::vector<Vec3> m_Vertex;
  //------------------------------------------------------------------------------------------------------------
  /// @brief Stores the normals for loading
  //------------------------------------------------------------------------------------------------------------
  std::vector<Vec3> m_Normal;
  //------------------------------------------------------------------------------------------------------------
  /// @brief Stores the texture coordinates for loading
  //------------------------------------------------------------------------------------------------------------
  std::vector<Vec3> m_Tex;
  //------------------------------------------------------------------------------------------------------------
  /// @brief Stores the face coordinates for loading
  //------------------------------------------------------------------------------------------------------------
  std::vector<Vec3> m_Face;
  //------------------------------------------------------------------------------------------------------------
  /// @brief Face vertices
  //------------------------------------------------------------------------------------------------------------
  std::vector<int>  m_v_Index;
  //------------------------------------------------------------------------------------------------------------
  /// @brief Face textures
  //------------------------------------------------------------------------------------------------------------
  std::vector<int>  m_t_Index;
  //------------------------------------------------------------------------------------------------------------
  /// @brief Face normals
  //------------------------------------------------------------------------------------------------------------
  std::vector<int>  m_n_Index;
  //------------------------------------------------------------------------------------------------------------
  /// @brief The texture
  //------------------------------------------------------------------------------------------------------------
  GLuint            m_Texture;
  //------------------------------------------------------------------------------------------------------------
  /// @brief Object's scale factor
  //------------------------------------------------------------------------------------------------------------
  float m_scale;


};

#endif
